b[-10,]
runApp()
runApp()
b
unique(b)
c<-unique(b)
c
runApp()
summary(origdata)
summary(origAddress)
colnames(origdata)
colnames(origAddress)
check_master<- unique(origAddress)
?uique
?unique
check_master
head(check_master)
View(check_master)
summary(origAddress)
for (i in 1:nlevels(gettingUniqueData )){
result <- geocode(as.character(origAddress$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
origAddress$long[i] <- as.numeric(result[1])
origAddress$lat[i] <- as.numeric(result[2])
# add[i] <- as.character(result[3])
}
View(origAddress)
runApp()
count(origAddress$terminatingOperator)
as.factor(origAddress$terminatingOperator)
count(as.factor(origAddress$terminatingOperator))
table(as.factor(origAddress$terminatingOperator))
count(table(as.factor(origAddress$terminatingOperator)))
count.fields(table(as.factor(origAddress$terminatingOperator)))
origAddress$terminatingOperator
runApp()
install.packages("htmltools")
shiny::runApp()
origAddress <- read.csv(file.choose(),header = T)
colnames(origAddress)
a<-origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
a
a
b<-aggregate(a$a.terminatingCircle~a$a.terminatingOperator,a,FUN = function(x)length(unique(x)))
b
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b
colnames(b)
colnames(b)<-c("terminatingCircle","Delivered Count")
b
colnames(b)
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
long[i] <- as.numeric(result[1])
latt[i] <- as.numeric(result[2])
add[i] <- as.character(result[3])
}
library(ggmap)
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
long[i] <- as.numeric(result[1])
latt[i] <- as.numeric(result[2])
add[i] <- as.character(result[3])
}
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
long[i] <- as.numeric(result[1])
latt[i] <- as.numeric(result[2])
add[i] <- as.character(result[3])
}
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
b
library(ggmap)
library(leaflet)
library(dplyr)
origAddress <- read.csv(file.choose(),header = T)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
#gettingUniqueData <- unique(origAddress$terminatingCircle)
#geodata<-data.frame(stringsAsFactors = FALSE)
"originadd = vector()
longg = vector()
latt = vector()
add = vector()"
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
#a <- cbind(originadd,longg,latt,add)
#a<-a[,c("longg" , "latt" , "add" )]
"b<-a
b = as.data.frame(b)
c<-a
c = as.data.frame(c)
b$longg<-as.numeric(as.character(b$longg))
b$latt<- as.numeric(as.character(b$latt))
countOperator<- function(x,y){
c <- c[which(c$long == x & c$lat == y),]
return (nrow(c))
}"
m <-leaflet(b) %>% addTiles() %>%
addMarkers(~longg , ~latt) %>%
addTiles()
library(ggmap)
library(leaflet)
library(dplyr)
origAddress <- read.csv(file.choose(),header = T)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
#gettingUniqueData <- unique(origAddress$terminatingCircle)
#geodata<-data.frame(stringsAsFactors = FALSE)
"originadd = vector()
longg = vector()
latt = vector()
add = vector()"
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
#a <- cbind(originadd,longg,latt,add)
#a<-a[,c("longg" , "latt" , "add" )]
"b<-a
b = as.data.frame(b)
c<-a
c = as.data.frame(c)
b$longg<-as.numeric(as.character(b$longg))
b$latt<- as.numeric(as.character(b$latt))
countOperator<- function(x,y){
c <- c[which(c$long == x & c$lat == y),]
return (nrow(c))
}"
m <-leaflet(b) %>% addTiles() %>%
addMarkers(~long , ~latt) %>%
addTiles()
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$terminatingOperator~a$terminatingCircle,a,FUN = function(x)length(unique(x)))
b<-aggregate(terminatingOperator~terminatingCircle,a,FUN = function(x)length(unique(x)))
a<-data.frame(a$a.terminatingOperator,a$a.terminatingCircle)
origAddress <- read.csv(file.choose(),header = T)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(terminatingOperator~terminatingCircle,a,FUN = function(x)length(unique(x)))
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
b<-as.data.frame(b)
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
library(ggmap)
for (i in 1:nrow(b )){
result <- geocode(as.character(b$terminatingCircle[i]),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
b
head(a)
head(b)
for (i in 1:nrow(b )){
result <- geocode(as.character(a$a.terminatingCircle),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
for (i in 1:nrow(b )){
result <- geocode(as.character(a$a.terminatingCircle),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
for (i in 1:nrow(b )){
result <- geocode(as.character(a$a.terminatingCircle),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
library(ggmap)
library(leaflet)
library(dplyr)
origAddress <- read.csv(file.choose(),header = T)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b<-as.data.frame(b)
for (i in 1:nrow(b )){
result <- geocode(as.character(a$a.terminatingCircle),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
#a <- cbind(originadd,longg,latt,add)
#a<-a[,c("longg" , "latt" , "add" )]
"b<-a
b = as.data.frame(b)
c<-a
c = as.data.frame(c)
b$longg<-as.numeric(as.character(b$longg))
b$latt<- as.numeric(as.character(b$latt))
countOperator<- function(x,y){
c <- c[which(c$long == x & c$lat == y),]
return (nrow(c))
}"
m <-leaflet(b) %>% addTiles() %>%
addMarkers(~long , ~latt) %>%
addTiles()
library(ggmap)
library(leaflet)
library(dplyr)
origAddress <- read.csv("master_10000.csv",header = T)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b<-as.data.frame(b)
for (i in 1:nrow(b )){
result <- geocode(as.character(a$a.terminatingCircle),output = "latlona", source = "google")
#originadd <- gettingUniqueData[i]
b$long[i] <- as.numeric(result[1])
b$latt[i] <- as.numeric(result[2])
#add[i] <- as.character(result[3])
}
m <-leaflet(b) %>% addTiles() %>%
addMarkers(~long , ~latt) %>%
addTiles()
shiny::runApp()
b<-as.data.frame(b)
b<-as.data.frame(b)
colnames(b)
colnames(b)<- c("terminatingCircle","terminatingOperator")
runApp()
origAddress <- read.csv("master_10000.csv",header = T)
# gettingUniqueData <- unique(origAddress$terminatingCircle)
#  gettingUniqueData <- unique(origAddress$terminatingCircle)
#b = origAddress
#b = as.data.frame(b)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b<-as.data.frame(b)
colnames(b)<- c("terminatingCircle","terminatingOperator")
origAddress<-b
for (i in 1:nrow(origAddress )){
result <- geocode(as.character(origAddress$terminatingCircle[i]),output = "latlona", source = "google")
origAddress$long[i] <- as.numeric(result[1])
# b$long[i] <- as.numeric(result[1])
origAddress$lat[i] <- as.numeric(result[2])
#b$lat[i] <-  as.numeric(result[2])
}
origAddress$lat<-as.numeric(as.character(origAddress$lat))
origAddress$long<- as.numeric(as.character(origAddress$long))
b$lat <- as.numeric(as.character(b$lat))
b$long <- as.numeric(as.character(b$long))
origAddress$lat<-as.numeric(as.character(origAddress$lat))
origAddress$long<- as.numeric(as.character(origAddress$long))
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat,popup = as.character(countOperator(~long , ~lat)) ) %>%
addTiles()
m
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat,popup = as.character(countOperator(~long , ~lat)) ) %>%
addTiles()
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat) %>%
addTiles()
origAddress
View(origAddress)
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat) %>%
addTiles()
m
runApp()
colnames(origAddress)
origAddress
head(origAddress)
colnames(origAddress)<- c("terminatingCircle","Delivered Count","long","lat")
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat) %>%
addTiles()
m
origAddress<-origAddress[complete.cases(origAddress),]
m <-leaflet(origAddress) %>%
addMarkers(~long , ~lat) %>%
addTiles()
m
colnames(origAddress)
runApp()
runApp()
runApp()
runApp()
View(origAddress)
origAddress[23,]
origAddress[24,]
origAddress[c(24,24),]
origAddress[c(22,23),]
origAddress[c(22,23),]
runApp()
View(origAddress)
origAddress[c(16),]
runApp()
origAddress <- read.csv("master_10000.csv",header = T)
origAddress
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
colnanames9a
colnanames(a)
colnames(a)
b<-aggregate(a$a.terminatingOperator~a$a.terminatingCircle,a,FUN = function(x)length(unique(x)))
b
table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
a<- origAddress
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b<-as.data.frame(b)
colnames(b)<- c("terminatingCircle","terminatingOperator")
origAddress<-b
View(b)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b<-as.data.frame(b)
b<-as.data.frame.table(b)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b<-as.data.frame.table(b)
View(b)
b
origAddress <- read.csv("master_10000.csv",header = T)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b
df<-as.data.frame(as.matrix(table(b)))
df
b
as.matrix(b)
bn<-as.matrix(b)
bn
head(bn)
bn<-as.data.frame.matrix(b)
bn
head(bn)
b
as.data.frame(b)
b
head(b)
head(b)
b
table(b)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b
as.data.frame.matrix(b)
b<-as.data.frame.matrix(b)
b
View(b)
b
b<-table(origAddress$terminatingOperator,origAddress$terminatingCircle)
b
table(origAddress$terminatingOperator,origAddress$terminatingCircle)
aggregate(origAddress$terminatingOperator~origAddress$terminatingCircle)
origAddress <- read.csv("master_10000.csv",header = T)
b<-table(origAddress$terminatingOperator,origAddress$terminatingCircle)
b
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
b
head(b)
bn<-as.data.frame(b)
bn
head(bn)
bn
colnames(bn)
aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
a<-data.frame(a$terminatingOperator,a$terminatingCircle)
origAddress <- read.csv("master_10000.csv",header = T)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
bn<-as.data.frame(b)
aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
colnames(bn)
colnames(bn)<- c("terminatingCircle","DeliveryCount")
colnames(bn)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
bn<-as.data.frame(b)
bn
bn<-aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
bn
head(bn)
View(bn)
bn<-aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
b<-table(origAddress$terminatingCircle,origAddress$terminatingOperator)
bn<-as.data.frame(b)
bn<-aggregate(bn$Freq, by=list(Category=bn$Var1), FUN=sum)
colnames(bn)
colnames(bn)<- c("terminatingCircle","DeliveryCount")
colnames(bn)
origAddress<-bn
for (i in 1:nrow(origAddress )){
result <- geocode(as.character(origAddress$terminatingCircle[i]),output = "latlona", source = "google")
origAddress$long[i] <- as.numeric(result[1])
origAddress$lat[i] <- as.numeric(result[2])
}
runApp()
runApp()
install.packages("shinyIncubator")
install.packages("devtools")
head(origAddress)
sum(origAddress$DeliveryCount)
library(shiny)
library(leaflet)
addMarkers
?addMarkers
m <-leaflet(origAddress) %>% addTiles() %>%
addMarkers(~long , ~lat) %>%
addPopups(~long,~lat,origAddress,options = popupOptions(closeButton = FALSE) )
m
colnames(origAddress)
runApp()
runApp()
?addPopups
colnames(origAddress)
runApp()
colnames(origAddress)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("plotly")
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
df
View(df)
?plot_geo
map_data("world", "canada") %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
runApp()
shiny::runApp()
runApp()

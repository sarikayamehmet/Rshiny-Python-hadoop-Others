shiny::runApp()
a<-read.csv(file.choose(),header = T)
a<-a[1:100,]
?observe
library(htmltools)
a<-read.csv(file.choose(),header = T)
a<-a[1:100,]
data.frame<-a
runApp()
runApp()
runApp()
runApp()
colnames(data.frame)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a<-read.csv("master_10000.csv",header = T)
datsetFrame <- data.frame[which(#datsetFrame$terminatingOperator == input$terminatingOperator
data.frame$terminatingCircle == input$terminatingCircle
& data.frame$procDate <= as.Date(input$dateRangeID[2])
& data.frame$procDate >= as.Date(input$dateRangeID[1])
),]
colnames(data.frame)
datsetFrame<-data.frame
g<- ggplot(datsetFrame %>% count(terminatingOperator, terminatingCircle) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n),               # Calculate percent within each region
ypos = cumsum(n) - 0.5*n),  # Calculate label positions
aes(terminatingOperator, n, fill=terminatingCircle)) +
geom_bar(stat="identity", width = 0.2) + coord_flip() +
geom_text(aes(label=n),  vjust=-1.1)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
?data.frame
colnames(data.frame)
runApp()
shiny::runApp()
runApp()
library(shiny)
?invalidateLater
?isolate
shiny::runApp()
runApp()
?withProgress
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
